spring.application.name=auth-demo

# Server Configuration
server.port=8081

# Database Configuration - H2 for development
spring.datasource.url=jdbc:h2:mem:authdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# PostgreSQL Configuration (for Docker Compose)
# Uncomment these and comment H2 config when using Docker Compose
#spring.datasource.url=jdbc:postgresql://localhost:5434/authapp
#spring.datasource.username=authapp
#spring.datasource.password=app_password
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# OAuth2 Resource Server Configuration (JWT)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/auth-demo-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/auth-demo-realm/protocol/openid-connect/certs

# OAuth2 Client Configuration (for login flows)
spring.security.oauth2.client.registration.keycloak.client-id=auth-demo-client
spring.security.oauth2.client.registration.keycloak.client-secret=sahEyI83386EDteQW9vrGZ21axLy66gA
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/auth-demo-realm
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/auth-demo-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/auth-demo-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/auth-demo-realm/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/auth-demo-realm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
